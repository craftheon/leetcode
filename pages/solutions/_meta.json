{"two-sum":"🟢 Two Sum","add-two-numbers":"🟠 Add Two Numbers","longest-substring-without-repeating-characters":"🟠 Longest Substring Without Repeating Characters","median-of-two-sorted-arrays":"🔴 Median of Two Sorted Arrays","longest-palindromic-substring":"🟠 Longest Palindromic Substring","zigzag-conversion":"🟠 Zigzag Conversion","reverse-integer":"🟠 Reverse Integer","palindrome-number":"🟢 Palindrome Number","container-with-most-water":"🟠 Container With Most Water","integer-to-roman":"🟠 Integer to Roman","roman-to-integer":"🟢 Roman to Integer","longest-common-prefix":"🟢 Longest Common Prefix","3sum":"🟠 3Sum","3sum-closest":"🟠 3Sum Closest","letter-combinations-of-a-phone-number":"🟠 Letter Combinations of a Phone Number","remove-nth-node-from-end-of-list":"🟠 Remove Nth Node From End of List","generate-parentheses":"🟠 Generate Parentheses","reverse-nodes-in-k-group":"🔴 Reverse Nodes in k-Group","remove-element":"🟢 Remove Element","trapping-rain-water":"🔴 Trapping Rain Water","jump-game-ii":"🟠 Jump Game II","permutations":"🟠 Permutations","rotate-image":"🟠 Rotate Image","n-queens":"🔴 N-Queens","maximum-subarray":"🟠 Maximum Subarray","jump-game":"🟠 Jump Game","length-of-last-word":"🟢 Length of Last Word","rotate-list":"🟠 Rotate List","unique-paths":"🟠 Unique Paths","unique-paths-ii":"🟠 Unique Paths II","minimum-path-sum":"🟠 Minimum Path Sum","edit-distance":"🟠 Edit Distance","remove-duplicates-from-sorted-array-ii":"🟠 Remove Duplicates from Sorted Array II","remove-duplicates-from-sorted-list":"🟢 Remove Duplicates from Sorted List","partition-list":"🟠 Partition List","unique-binary-search-trees-ii":"🟠 Unique Binary Search Trees II","validate-binary-search-tree":"🟠 Validate Binary Search Tree","symmetric-tree":"🟢 Symmetric Tree","binary-tree-zigzag-level-order-traversal":"🟠 Binary Tree Zigzag Level Order Traversal","maximum-depth-of-binary-tree":"🟢 Maximum Depth of Binary Tree","construct-binary-tree-from-inorder-and-postorder-traversal":"🟠 Construct Binary Tree from Inorder and Postorder Traversal","binary-tree-level-order-traversal-ii":"🟠 Binary Tree Level Order Traversal II","path-sum":"🟢 Path Sum","flatten-binary-tree-to-linked-list":"🟠 Flatten Binary Tree to Linked List","populating-next-right-pointers-in-each-node":"🟠 Populating Next Right Pointers in Each Node","pascals-triangle":"🟢 Pascal's Triangle","triangle":"🟠 Triangle","best-time-to-buy-and-sell-stock":"🟢 Best Time to Buy and Sell Stock","valid-palindrome":"🟢 Valid Palindrome","word-break":"🟠 Word Break","binary-tree-preorder-traversal":"🟢 Binary Tree Preorder Traversal","lru-cache":"🟠 LRU Cache","reverse-words-in-a-string":"🟠 Reverse Words in a String","compare-version-numbers":"🟠 Compare Version Numbers","two-sum-ii-input-array-is-sorted":"🟠 Two Sum II - Input Array Is Sorted","rotate-array":"🟠 Rotate Array","house-robber":"🟠 House Robber","binary-tree-right-side-view":"🟠 Binary Tree Right Side View","happy-number":"🟢 Happy Number","isomorphic-strings":"🟢 Isomorphic Strings","reverse-linked-list":"🟢 Reverse Linked List","maximal-square":"🟠 Maximal Square","count-complete-tree-nodes":"🟢 Count Complete Tree Nodes","invert-binary-tree":"🟢 Invert Binary Tree","kth-smallest-element-in-a-bst":"🟠 Kth Smallest Element in a BST","lowest-common-ancestor-of-a-binary-tree":"🟠 Lowest Common Ancestor of a Binary Tree","product-of-array-except-self":"🟠 Product of Array Except Self","word-pattern":"🟢 Word Pattern","longest-increasing-subsequence":"🟠 Longest Increasing Subsequence","range-sum-query-immutable":"🟢 Range Sum Query - Immutable","coin-change":"🟠 Coin Change","increasing-triplet-subsequence":"🟠 Increasing Triplet Subsequence","reverse-vowels-of-a-string":"🟢 Reverse Vowels of a String","guess-number-higher-or-lower":"🟢 Guess Number Higher or Lower","is-subsequence":"🟢 Is Subsequence","path-sum-iii":"🟠 Path Sum III","string-compression":"🟠 String Compression","continuous-subarray-sum":"🟠 Continuous Subarray Sum","minimum-absolute-difference-in-bst":"🟢 Minimum Absolute Difference in BST","binary-tree-tilt":"🟢 Binary Tree Tilt","add-one-row-to-tree":"🟠 Add One Row to Tree","average-of-levels-in-binary-tree":"🟢 Average of Levels in Binary Tree","maximum-average-subarray-i":"🟢 Maximum Average Subarray I","two-sum-iv-input-is-a-bst":"🟢 Two Sum IV - Input is a BST","maximum-binary-tree":"🟠 Maximum Binary Tree","print-binary-tree":"🟠 Print Binary Tree","valid-palindrome-ii":"🟢 Valid Palindrome II","min-cost-climbing-stairs":"🟢 Min Cost Climbing Stairs","leaf-similar-trees":"🟢 Leaf-Similar Trees","minimum-falling-path-sum":"🟠 Minimum Falling Path Sum","max-consecutive-ones-iii":"🟠 Max Consecutive Ones III","greatest-common-divisor-of-strings":"🟢 Greatest Common Divisor of Strings","n-th-tribonacci-number":"🟢 N-th Tribonacci Number","find-the-difference-of-two-arrays":"🟢 Find the Difference of Two Arrays","longest-zigzag-path-in-a-binary-tree":"🟠 Longest ZigZag Path in a Binary Tree","count-good-nodes-in-binary-tree":"🟠 Count Good Nodes in Binary Tree","maximum-number-of-vowels-in-a-substring-of-given-length":"🟠 Maximum Number of Vowels in a Substring of Given Length","sum-of-all-odd-length-subarrays":"🟢 Sum of All Odd Length Subarrays","max-number-of-k-sum-pairs":"🟠 Max Number of K-Sum Pairs","merge-strings-alternately":"🟢 Merge Strings Alternately","partition-array-according-to-given-pivot":"🟠 Partition Array According to Given Pivot","sum-in-a-matrix":"🟠 Sum in a Matrix"}